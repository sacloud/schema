{
  "openapi": "3.0.3",
  "info": {
    "title": "SAKURA Cloud APIs",
    "version": "0.0.1",
    "description": "This is a definitions for SAKURA Cloud APIs.",
    "termsOfService": "https://www.sakura.ad.jp/agreement/",
    "contact": {
      "name": "Maintainers",
      "url": "https://github.com/sacloud/schema",
      "email": "sacloud.users@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://secure.sakura.ad.jp/cloud/zone/{zone}/api/cloud/1.1",
      "variables": {
        "zone": {
          "default": "is1a",
          "enum": [
            "is1a",
            "is1b",
            "tk1a",
            "tk1b",
            "tk1v"
          ]
        }
      }
    }
  ],
  "tags": [
    {
      "name": "icons",
      "description": "Operations for Icon resource"
    },
    {
      "name": "regions",
      "description": "Operations for Region resource"
    },
    {
      "name": "zones",
      "description": "Operations for Zone resource"
    }
  ],
  "paths": {
    "/icon?{params}": {
      "get": {
        "summary": "List all Icons",
        "description": "List all Icons",
        "operationId": "listIcons",
        "tags": [
          "icons"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconFindRequest"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of icons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconMultiResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/icon": {
      "post": {
        "summary": "Create a icon",
        "description": "Create a icon",
        "operationId": "createIcons",
        "tags": [
          "icons"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IconCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/icon/{iconId}": {
      "get": {
        "summary": "Info for a specific Icon",
        "description": "Info for a specific Icon",
        "operationId": "showIconById",
        "tags": [
          "icons"
        ],
        "parameters": [
          {
            "name": "iconId",
            "in": "path",
            "required": true,
            "description": "The id of the icon to retrieve",
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "put": {
        "summary": "Update Icon",
        "description": "UpdateIcon",
        "operationId": "updateIconById",
        "tags": [
          "icons"
        ],
        "parameters": [
          {
            "name": "iconId",
            "in": "path",
            "required": true,
            "description": "The id of the icon to retrieve",
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IconUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "423": {
            "$ref": "#/components/responses/Locked"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      },
      "delete": {
        "summary": "Delete Icon",
        "description": "DeleteIcon",
        "operationId": "deleteIconById",
        "tags": [
          "icons"
        ],
        "parameters": [
          {
            "name": "iconId",
            "in": "path",
            "required": true,
            "description": "The id of the icon to delete",
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IconSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "423": {
            "$ref": "#/components/responses/Locked"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/region?{params}": {
      "get": {
        "summary": "List all Regions",
        "description": "List all Regions",
        "operationId": "listRegions",
        "tags": [
          "regions"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionFindRequest"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of regions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionMultiResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/region/{regionId}": {
      "get": {
        "summary": "Info for a specific Region",
        "description": "Info for a specific Region",
        "operationId": "showRegionById",
        "tags": [
          "regions"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "description": "The id of the region to retrieve",
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegionSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/zone?{params}": {
      "get": {
        "summary": "List all Zones",
        "description": "List all Zones",
        "operationId": "listZones",
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "params",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneFindRequest"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of zones",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneMultiResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "405": {
            "$ref": "#/components/responses/MethodNotAllowed"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/zone/{zoneId}": {
      "get": {
        "summary": "Info for a specific Zone",
        "description": "Info for a specific Zone",
        "operationId": "showZoneById",
        "tags": [
          "zones"
        ],
        "parameters": [
          {
            "name": "zoneId",
            "in": "path",
            "required": true,
            "description": "The id of the zone to retrieve",
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneSingleResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ActionResultEnvelope": {
        "type": "object",
        "properties": {
          "is_ok": {
            "type": "boolean"
          }
        },
        "required": [
          "is_ok"
        ]
      },
      "APIError": {
        "type": "object",
        "properties": {
          "is_fatal": {
            "type": "boolean"
          },
          "serial": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error_code": {
            "type": "string"
          },
          "error_msg": {
            "type": "string"
          }
        },
        "required": [
          "is_fatal",
          "serial",
          "status",
          "error_code",
          "error_msg"
        ]
      },
      "FindRequest": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer"
          },
          "Exclude": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "From": {
            "type": "integer"
          },
          "Include": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Sort": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        }
      },
      "FindResultEnvelope": {
        "type": "object",
        "properties": {
          "Count": {
            "type": "integer"
          },
          "From": {
            "type": "integer"
          },
          "Total": {
            "type": "integer"
          },
          "is_ok": {
            "type": "boolean"
          }
        },
        "required": [
          "Count",
          "From",
          "Total",
          "is_ok"
        ]
      },
      "FTPServer": {
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "IPAddress": {
            "type": "string"
          }
        },
        "required": [
          "HostName",
          "IPAddress"
        ]
      },
      "ID": {
        "oneOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ],
        "format": "int64"
      },
      "Scope": {
        "type": "string",
        "enum": [
          "user",
          "shared"
        ]
      },
      "VNCProxy": {
        "type": "object",
        "properties": {
          "HostName": {
            "type": "string"
          },
          "IPAddress": {
            "type": "string"
          }
        },
        "required": [
          "HostName",
          "IPAddress"
        ]
      },
      "Icon": {
        "type": "object",
        "properties": {
          "Availability": {
            "type": "string"
          },
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ID": {
            "$ref": "#/components/schemas/ID"
          },
          "ModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "Name": {
            "type": "string"
          },
          "Scope": {
            "type": "string"
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "URL": {
            "type": "string"
          }
        },
        "required": [
          "Availability",
          "CreatedAt",
          "ID",
          "ModifiedAt",
          "Name",
          "Scope",
          "Tags",
          "URL"
        ]
      },
      "Icons": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Icon"
            },
            {
              "type": "object",
              "properties": {
                "Index": {
                  "type": "integer"
                }
              },
              "required": [
                "Index"
              ]
            }
          ]
        }
      },
      "IconWrapper": {
        "type": "object",
        "properties": {
          "Icon": {
            "$ref": "#/components/schemas/Icon"
          }
        },
        "required": [
          "Icon"
        ]
      },
      "IconsWrapper": {
        "type": "object",
        "properties": {
          "Icons": {
            "$ref": "#/components/schemas/Icons"
          }
        },
        "required": [
          "Icons"
        ]
      },
      "IconSingleResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/IconWrapper"
          }
        ]
      },
      "IconMultiResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/IconsWrapper"
          }
        ]
      },
      "IconFindFilter": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "Scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "Name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Tags.Name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IconFindRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindRequest"
          },
          {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "Filter": {
                "$ref": "#/components/schemas/IconFindFilter"
              }
            }
          }
        ]
      },
      "IconCreateRequest": {
        "type": "object",
        "properties": {
          "Icon": {
            "$ref": "#/components/schemas/IconCreateRequestBody"
          }
        },
        "required": [
          "Icon"
        ]
      },
      "IconCreateRequestBody": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Image": {
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Image"
        ]
      },
      "IconUpdateRequest": {
        "type": "object",
        "properties": {
          "Icon": {
            "$ref": "#/components/schemas/IconUpdateRequestBody"
          }
        },
        "required": [
          "Icon"
        ]
      },
      "IconUpdateRequestBody": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Region": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "NameServers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "Description",
          "ID",
          "Name",
          "NameServers"
        ]
      },
      "Regions": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Region"
            },
            {
              "type": "object",
              "properties": {
                "Index": {
                  "type": "integer"
                }
              },
              "required": [
                "Index"
              ]
            }
          ]
        }
      },
      "RegionWrapper": {
        "type": "object",
        "properties": {
          "Region": {
            "$ref": "#/components/schemas/Region"
          }
        },
        "required": [
          "Region"
        ]
      },
      "RegionsWrapper": {
        "type": "object",
        "properties": {
          "Regions": {
            "$ref": "#/components/schemas/Regions"
          }
        },
        "required": [
          "Regions"
        ]
      },
      "RegionFindFilter": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "Name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RegionFindRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindRequest"
          },
          {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "Filter": {
                "$ref": "#/components/schemas/RegionFindFilter"
              }
            }
          }
        ]
      },
      "RegionSingleResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/RegionWrapper"
          }
        ]
      },
      "RegionMultiResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/RegionsWrapper"
          }
        ]
      },
      "Zone": {
        "type": "object",
        "properties": {
          "CreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "Description": {
            "type": "string"
          },
          "DisplayOrder": {
            "type": "integer"
          },
          "FTPServer": {
            "$ref": "#/components/schemas/FTPServer"
          },
          "ID": {
            "$ref": "#/components/schemas/ID"
          },
          "Name": {
            "type": "string"
          },
          "Region": {
            "$ref": "#/components/schemas/Region"
          },
          "VNCProxy": {
            "$ref": "#/components/schemas/VNCProxy"
          },
          "IsDummy": {
            "type": "boolean"
          }
        },
        "required": [
          "CreatedAt",
          "Description",
          "DisplayOrder",
          "FTPServer",
          "ID",
          "Name",
          "Region",
          "VNCProxy",
          "IsDummy"
        ]
      },
      "Zones": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Zone"
            },
            {
              "type": "object",
              "properties": {
                "Index": {
                  "type": "integer"
                }
              },
              "required": [
                "Index"
              ]
            }
          ]
        }
      },
      "ZoneWrapper": {
        "type": "object",
        "properties": {
          "Zone": {
            "$ref": "#/components/schemas/Zone"
          }
        },
        "required": [
          "Zone"
        ]
      },
      "ZonesWrapper": {
        "type": "object",
        "properties": {
          "Zones": {
            "$ref": "#/components/schemas/Zones"
          }
        },
        "required": [
          "Zones"
        ]
      },
      "ZoneFindFilter": {
        "type": "object",
        "additionalProperties": true,
        "properties": {
          "Name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Region.Name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Region.ID": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ZoneFindRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindRequest"
          },
          {
            "type": "object",
            "additionalProperties": true,
            "properties": {
              "Filter": {
                "$ref": "#/components/schemas/ZoneFindFilter"
              }
            }
          }
        ]
      },
      "ZoneSingleResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/ZoneWrapper"
          }
        ]
      },
      "ZoneMultiResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FindResultEnvelope"
          },
          {
            "$ref": "#/components/schemas/ZonesWrapper"
          }
        ]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "headers": {
          "WWW_Authenticate": {
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "Method Not Allowed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "Locked": {
        "description": "Locked",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      },
      "UnexpectedError": {
        "description": "Unexpected Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/APIError"
            }
          }
        }
      }
    }
  }
}
