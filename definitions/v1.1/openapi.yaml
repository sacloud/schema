openapi: 3.0.3
tags:
  - name: icons
    description: Operations for Icon resource
  - name: regions
    description: Operations for Region resource
info:
  title: SAKURA Cloud APIs
  version: 0.0.1
  description: This is a definitions for SAKURA Cloud APIs.
  termsOfService: 'https://www.sakura.ad.jp/agreement/'
  contact:
    name: Maintainers
    url: 'https://github.com/sacloud/schema'
    email: sacloud.users@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://secure.sakura.ad.jp/cloud/zone/{zone}/api/cloud/1.1'
    variables:
      zone:
        default: is1a
        enum:
          - is1a
          - is1b
          - tk1a
          - tk1b
          - tk1v
paths:
  '/icon?{params}':
    get:
      summary: List all Icons
      description: List all Icons
      operationId: listIcons
      tags:
        - icons
      parameters:
        - in: path
          required: true
          name: params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IconFindParameter'
      responses:
        '200':
          description: An array of icons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icons'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  /icon:
    post:
      summary: Create a icon
      description: Create a icon
      operationId: createIcons
      tags:
        - icons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconCreateParameter'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/icon/{iconId}':
    get:
      summary: Info for a specific Icon
      description: Info for a specific Icon
      operationId: showIconById
      tags:
        - icons
      parameters:
        - name: iconId
          in: path
          required: true
          description: The id of the icon to retrieve
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
    put:
      summary: Update Icon
      description: UpdateIcon
      operationId: updateIconById
      tags:
        - icons
      parameters:
        - name: iconId
          in: path
          required: true
          description: The id of the icon to retrieve
          schema:
            $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IconUpdateParameter'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Icon'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/region?{params}':
    get:
      summary: List all Regions
      description: List all Regions
      operationId: listRegions
      tags:
        - regions
      parameters:
        - in: path
          required: true
          name: params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionFindParameter'
      responses:
        '200':
          description: An array of regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Regions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
  '/region/{regionId}':
    get:
      summary: Info for a specific Region
      description: Info for a specific Region
      operationId: showRegionById
      tags:
        - regions
      parameters:
        - name: regionId
          in: path
          required: true
          description: The id of the region to retrieve
          schema:
            $ref: '#/components/schemas/ID'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          $ref: '#/components/responses/UnexpectedError'
security:
  - basicAuth: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    ID:
      oneOf:
        - type: integer
        - type: string
      format: int64
    FindResultMeta:
      type: object
      properties:
        Count:
          type: integer
        From:
          type: integer
        Total:
          type: integer
        is_ok:
          type: boolean
    APIError:
      type: object
      properties:
        is_fatal:
          type: boolean
        serial:
          type: string
        error_code:
          type: string
        error_msg:
          type: string
    IconFindParameter:
      allOf:
        - type: object
          properties:
            Count:
              type: integer
            Exclude:
              items:
                type: string
              type: array
            From:
              type: integer
            Include:
              items:
                type: string
              type: array
            Sort:
              items:
                type: string
              type: array
        - type: object
          additionalProperties: true
          properties:
            Filter:
              $ref: '#/components/schemas/IconFindFilter'
    IconFindFilter:
      type: object
      additionalProperties: true
      properties:
        Scope:
          type: string
          enum:
            - user
            - shared
        Name:
          type: array
          items:
            type: string
        Tags.Name:
          type: array
          items:
            type: string
    IconCreateParameter:
      type: object
      properties:
        Name:
          type: string
        Tags:
          type: array
          items:
            type: string
        Image:
          type: string
    IconUpdateParameter:
      type: object
      properties:
        Name:
          type: string
        Tags:
          type: array
          items:
            type: string
    Icon:
      type: object
      properties:
        Availability:
          type: string
        CreatedAt:
          type: string
        ID:
          $ref: '#/components/schemas/ID'
        ModifiedAt:
          type: string
        Name:
          type: string
        Scope:
          type: string
        Tags:
          type: array
          items:
            type: string
        URL:
          type: string
    Icons:
      allOf:
        - $ref: '#/components/schemas/FindResultMeta'
        - type: object
          properties:
            Icons:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Icon'
                  - type: object
                    properties:
                      Index:
                        type: integer
    RegionFindParameter:
      allOf:
        - $ref: '#/components/schemas/IconFindParameter/allOf/0'
        - type: object
          additionalProperties: true
          properties:
            Filter:
              $ref: '#/components/schemas/RegionFindFilter'
    RegionFindFilter:
      type: object
      additionalProperties: true
      properties:
        Name:
          type: array
          items:
            type: string
    Region:
      type: object
      properties:
        Description:
          type: string
        ID:
          type: integer
        Name:
          type: string
        NameServers:
          items:
            type: string
          type: array
    Regions:
      allOf:
        - $ref: '#/components/schemas/FindResultMeta'
        - type: object
          properties:
            Regions:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Region'
                  - type: object
                    properties:
                      Index:
                        type: integer
  responses:
    UnauthorizedError:
      description: Unauthorized
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIError'
